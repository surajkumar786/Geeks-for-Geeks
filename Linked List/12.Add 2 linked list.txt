class Solution {
  public:
    // Function to add two numbers represented by linked list.
    Node* reverse(Node* head)
    {
        Node* prev=NULL;
        Node* curr=head;
        
        while(curr)
        {
            Node* next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        
        return prev;
    }
    
    Node* addTwoLists(Node* num1, Node* num2) {
        if (!num1) return num2;
        if (!num2) return num1;
        
        num1=reverse(num1);
        num2=reverse(num2);
        
        int c=0,s=0;
        Node* temp;
        Node* res=NULL;
        Node* curr=NULL;
        
        while(num1 || num2)
        {
            s=c+(num1?num1->data:0)+(num2?num2->data:0);
            c=(s>=10?s/10:0);
            s=s%10;
            temp=new Node(s);
            if(res==NULL) res=temp;
            else curr->next=temp;
            curr=temp;
            if(num1) num1=num1->next;
            if(num2) num2=num2->next;
        }
        
        if(c>0)
        {
            temp=new Node(c);
            curr->next=temp;
            curr=temp;
        }
        
        res=reverse(res);
        
        return res;
    }
};