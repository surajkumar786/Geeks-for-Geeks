1)
----------
class Solution {
  public:
    /* Should return data of middle node. If linked list is empty, then -1 */
    int getMiddle(Node* head) {
        int len=0;
        
        Node* temp=head;
        while(temp!=NULL)
        {
            len++;
            temp=temp->next;
        }
        
        temp=head;
        int n=0;
            
        while(temp)
        {
            if(n == (len/2)) return temp->data;
            n++;
            temp=temp->next;
        }
        
        
        return -1;
    }
};




2)
-------------------
class Solution {
  public:
    /* Should return data of middle node. If linked list is empty, then -1 */
    int getMiddle(Node* head) {
        Node* slow=head;
        Node* fast=head;
        
        while(fast!=NULL && fast->next!=NULL)
        {
            fast=fast->next->next;
            slow=slow->next;
        }
        
        return slow->data;
    }
};