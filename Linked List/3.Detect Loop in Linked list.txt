1.Approach-1  tc=o(N),sc=o(N)
--------------------------------
class Solution 
{
  public:
    // Function to check if the linked list has a loop.
    bool detectLoop(Node* head) 
    {
        unordered_map<Node*,int> mp;
        
        if(head==NULL) return false;
        
        while(head)
        {
            if(mp[head] == NULL)
            {
                mp[head]=1;
                head=head->next;
            }
            else
            {
                return true;
            }
        }
        
        return false;
    }
};


2.Approach-2  tc=o(N) ,sc=o(1)
--------------------------------

class Solution 
{
  public:
    // Function to check if the linked list has a loop.
    bool detectLoop(Node* head) 
    {
        Node* fast=head;
        Node* slow=head;
        
        while(fast != NULL)
        {
            fast=fast->next;
            
            if(fast != NULL)
            {
                fast=fast->next;
                slow=slow->next;
            }
            
            if(fast==slow) return true;
        }
        
        return false;
    }
};